{"ast":null,"code":"var _jsxFileName = \"D:\\\\YanivArad\\\\FullStack_Project\\\\Client\\\\cinema\\\\src\\\\Components\\\\MoviesData.js\",\n  _s = $RefreshSig$();\nimport { Container } from \"@mui/system\";\nimport { Button, Card, CardMedia, CardContent, List, Grid, Typography, ListItem, TextField } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesData() {\n  _s();\n  console.log('Movies update');\n  const members = useSelector(state => state.members);\n  const subscriptions = useSelector(state => state.subscriptions);\n  const movies = useSelector(state => state.movies);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const showName = location.state;\n  const userOnline = sessionStorage.getItem('userOnline');\n  const user = JSON.parse(userOnline);\n  const DeleteMovie = async movID => {\n    //delete in DB 'http://localhost:8000/movies'  and  'http://localhost:8000/subscriptions'\n    await axios.delete(`${'http://localhost:8000/movies'}/${movID}`);\n    await axios.put(`${'http://localhost:8000/subscriptions'}/${movID}`, movID);\n    //dispatch({ type: 'DELETE_MOVIE', payload: movID });\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              padding: 1,\n              marginLeft: 2,\n              background: '#eeeeee'\n            },\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              sx: {\n                color: \"#004d40\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [movie.name, \" , \", new Date(movie.premiered).getFullYear()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                mt: 2,\n                children: [\" Genres:  \", movie.genres.join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), user.permissions.includes('Update Movies') && /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                padding: 1,\n                marginTop: 2,\n                marginLeft: 3\n              },\n              variant: \"outlined\",\n              type: \"submit\",\n              onClick: () => navigate('/mainPage/editMovie', {\n                state: {\n                  movie\n                }\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 64\n            }, this), user.permissions.includes('Delete Movies') && /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                padding: 1,\n                marginTop: 2,\n                marginLeft: 2\n              },\n              variant: \"outlined\",\n              type: \"submit\",\n              onClick: () => DeleteMovie(movie._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this)]\n        }, movie._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesData, \"uoxjkpXKICFJLdV0+o89unzFNA8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate, useLocation];\n});\n_c = MoviesData;\nexport default MoviesData;\nvar _c;\n$RefreshReg$(_c, \"MoviesData\");","map":{"version":3,"names":["Container","Button","Card","CardMedia","CardContent","List","Grid","Typography","ListItem","TextField","useState","useEffect","useNavigate","useLocation","Link","useSelector","useDispatch","axios","jsxDEV","_jsxDEV","MoviesData","_s","console","log","members","state","subscriptions","movies","navigate","location","showName","userOnline","sessionStorage","getItem","user","JSON","parse","DeleteMovie","movID","delete","put","window","reload","children","map","movie","sx","padding","marginLeft","background","elevation","color","name","Date","premiered","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","mt","genres","join","permissions","includes","marginTop","variant","type","onClick","_id","_c","$RefreshReg$"],"sources":["D:/YanivArad/FullStack_Project/Client/cinema/src/Components/MoviesData.js"],"sourcesContent":["import { Container } from \"@mui/system\";\nimport { Button, Card, CardMedia, CardContent, List, Grid, Typography, ListItem, TextField } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation, Link} from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from 'axios'\n\n\nfunction MoviesData() {\n  console.log('Movies update')\n  const members = useSelector((state) => state.members);\n  const subscriptions = useSelector((state) => state.subscriptions);\n  const movies = useSelector((state) => state.movies);\n  const navigate = useNavigate();\n  const location = useLocation()\n\n  \n  const showName  = location.state;\n  const userOnline = sessionStorage.getItem('userOnline');\n  const user = JSON.parse(userOnline);\n \n\nconst DeleteMovie = async ( movID) => {\n      //delete in DB 'http://localhost:8000/movies'  and  'http://localhost:8000/subscriptions'\n      await axios.delete(`${'http://localhost:8000/movies'}/${movID}`);\n      await axios.put(`${'http://localhost:8000/subscriptions'}/${movID}`,movID)\n      //dispatch({ type: 'DELETE_MOVIE', payload: movID });\n      window.location.reload();\n    }\n \n  return (\n    <Container>\n      <ul>\n        {\n          movies.map((movie) => {\n            return <div key={movie._id}>\n              <Card sx={{ padding: 1, marginLeft: 2, background: '#eeeeee' }} elevation={3}>\n              <CardMedia  sx={{color:\"#004d40\"}}><h2>{movie.name} , {new Date(movie.premiered).getFullYear()}</h2></CardMedia>\n              <CardContent>\n                <Typography mt={2}> Genres:  {movie.genres.join(\", \")}</Typography>\n                </CardContent>\n                {/* <Container style={{ display: \"flex\" }}>\n                  {<img src={movie.image} alt=\"pic\" />}\n                  <Card sx={{ padding: 1, marginLeft: 2, background: '#eeeeee', width: 500 }} elevation={3}>\n                    <CardMedia height=\"200\"><h3 style={{ textAlign: 'center', fontFamily: 'Comic Sans MS', color: '#4a6baf' }}>Subscriptions watched</h3></CardMedia>\n                    <CardContent>\n                    <List  sx={{ width: '100%', overflow: 'auto', height: 150 }} subheader={<li />}>\n                      {subscriptions.map(sub => {\n                        return <div key={sub._id}>\n                          {\n                            sub.movies.filter(mov => mov.movieId === movie._id).map(item => {\n                              return <div key={movie._id}>\n                                {\n                                  members.filter(member => member._id === sub.memberId).map(member => {\n                                    return <div key={member._id}>\n                                      {\n                                           <ListItem key={`item-${movie._id}-${member._id}`}>\n                                           <Grid item xs>\n                                             <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                             <Link to={\"/mainPage/subscriptions/membersData\"} state={member.name} >{member.name}</Link>\n                                             </Typography>\n                                           </Grid>\n                                           <Grid item xs>\n                                             <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                             <h5>{new Date(item.date).toLocaleDateString(\"en-CA\", { year: \"numeric\", month: \"2-digit\", day: \"2-digit\", })}</h5>\n                                             </Typography>\n                                           </Grid>\n                                         </ListItem>\n                                      }\n                                    </div>\n                                  })\n                                }\n                              </div>\n                            })\n                          }\n                        </div>\n                      })\n                      }\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Container> */}\n                {user.permissions.includes('Update Movies') && <Button sx={{ padding: 1, marginTop: 2, marginLeft: 3 }} variant=\"outlined\" type='submit' onClick={() => navigate('/mainPage/editMovie', { state: { movie } })}>Edit</Button>}\n                {user.permissions.includes('Delete Movies') && <Button sx={{ padding: 1, marginTop: 2, marginLeft: 2 }} variant=\"outlined\" type='submit' onClick={() => DeleteMovie( movie._id)}>Delete</Button>}\n              </Card><br />\n            </div>\n          })\n        }\n      </ul>\n    </Container>\n  );\n}\nexport default MoviesData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}