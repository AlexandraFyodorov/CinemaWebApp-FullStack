{"ast":null,"code":"var _jsxFileName = \"D:\\\\YanivArad\\\\FullStack_Project\\\\Client\\\\cinema\\\\src\\\\Components\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport { Container } from \"@mui/system\";\nimport { Button, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@mui/material\";\nimport MovieData from \"./MovieData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const navigate = useNavigate();\n  const movies = useSelector(state => state.movies);\n  const [findMovie, setFindMovie] = useState(\"\");\n  let moviesToShow = movies;\n  const FindMovie = e => {\n    //find movie and display\n    console.log('Hello');\n    try {\n      if (findMovie) {\n        moviesToShow = movies.filter(mov => mov.name === findMovie).map(x => x);\n      }\n      if (!moviesToShow) {\n        moviesToShow = movies;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"MOVIES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        padding: 2,\n        marginTop: 2\n      },\n      variant: \"outlined\",\n      size: \"small\",\n      type: \"submit\",\n      color: \"primary\",\n      onClick: () => navigate(`movies`),\n      children: \"All Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        padding: 2,\n        marginTop: 2,\n        marginLeft: 2\n      },\n      variant: \"outlined\",\n      size: \"small\",\n      type: \"submit\",\n      color: \"primary\",\n      onClick: () => navigate(`/mainPage/addNewMovie`),\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      sx: {\n        padding: 1,\n        marginTop: 1,\n        marginLeft: 1\n      },\n      required: true,\n      label: \"Find Movie\",\n      id: \"outlined-find-movie\",\n      onChange: e => setFindMovie(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        padding: 2,\n        marginTop: 2,\n        marginLeft: 2\n      },\n      variant: \"outlined\",\n      size: \"small\",\n      type: \"submit\",\n      color: \"primary\",\n      onClick: FindMovie,\n      children: [\" \", \"Find\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      columns: {\n        xs: 4,\n        sm: 8,\n        md: 12\n      },\n      children: moviesToShow.map(mov => {\n        return /*#__PURE__*/_jsxDEV(MovieData, {\n          movie: mov\n        }, mov._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"zzPC7EAGnaYE6Ly0bEaUNOOhsEc=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Container","Button","TextField","useState","useNavigate","Outlet","useSelector","Grid","MovieData","jsxDEV","_jsxDEV","Movies","_s","navigate","movies","state","findMovie","setFindMovie","moviesToShow","FindMovie","e","console","log","filter","mov","name","map","x","error","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","marginTop","variant","size","type","color","onClick","marginLeft","required","label","id","onChange","target","value","container","spacing","xs","md","columns","sm","movie","_id","_c","$RefreshReg$"],"sources":["D:/YanivArad/FullStack_Project/Client/cinema/src/Components/Movies.js"],"sourcesContent":["import { Container } from \"@mui/system\";\nimport { Button, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@mui/material\";\nimport MovieData from \"./MovieData\";\nfunction Movies() {\n  const navigate = useNavigate();\n  const movies = useSelector((state) => state.movies);\n  const [findMovie, setFindMovie] = useState(\"\");\n  let moviesToShow = movies;\n\n  const FindMovie =  (e) => {\n    //find movie and display\n    console.log('Hello')\n    try {\n      if (findMovie) {\n        moviesToShow =  movies.filter((mov) => mov.name === findMovie).map(x=>x);\n      }\n      if (!moviesToShow) {\n        moviesToShow = movies;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <h3>MOVIES</h3>\n      <Button\n        sx={{ padding: 2, marginTop: 2 }}\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"submit\"\n        color=\"primary\"\n        onClick={() => navigate(`movies`)}\n      >\n        All Movies\n      </Button>\n      <Button\n        sx={{ padding: 2, marginTop: 2, marginLeft: 2 }}\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"submit\"\n        color=\"primary\"\n        onClick={() => navigate(`/mainPage/addNewMovie`)}\n      >\n        Add Movie\n      </Button>\n      <TextField\n        sx={{ padding: 1, marginTop: 1, marginLeft: 1 }}\n        required\n        label=\"Find Movie\"\n        id=\"outlined-find-movie\"\n        onChange={(e) => setFindMovie(e.target.value)}\n      />\n      <Button\n        sx={{ padding: 2, marginTop: 2, marginLeft: 2 }}\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"submit\"\n        color=\"primary\"\n        onClick={FindMovie}\n      >\n        {\" \"}\n        Find{\" \"}\n      </Button>\n      <br />\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {moviesToShow.map((mov) => {\n          return <MovieData key={mov._id} movie={mov} />;\n        })}\n      </Grid>\n      <Outlet />\n    </Container>\n  );\n}\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}