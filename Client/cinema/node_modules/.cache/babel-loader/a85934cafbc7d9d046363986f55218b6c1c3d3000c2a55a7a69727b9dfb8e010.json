{"ast":null,"code":"import axios from 'axios';\nconst initialValue = {\n  movies: [],\n  members: [],\n  subscriptions: [],\n  users: []\n};\nconst storeReducer = async function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'LOADMOVIES':\n      return {\n        ...state,\n        movies: action.payload\n      };\n    case 'DELETE_MOVIE':\n      const movieId = action.payload;\n      await axios.delete(`${'http://localhost:8000/movies'}/${movieId}`);\n      await axios.put(`${'http://localhost:8000/subscriptions'}/${movieId}`, movieId);\n      const updatedMovies = state.movies.filter(movie => movie.id !== movieId);\n      return {\n        ...state,\n        movies: updatedMovies\n      };\n    case 'LOADMEMBERS':\n      return {\n        ...state,\n        members: action.payload\n      };\n    case 'LOADSUBSCRIPTIONS':\n      return {\n        ...state,\n        subscriptions: action.payload\n      };\n    case 'LOADUSERS':\n      return {\n        ...state,\n        users: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default storeReducer;","map":{"version":3,"names":["axios","initialValue","movies","members","subscriptions","users","storeReducer","state","arguments","length","undefined","action","type","payload","movieId","delete","put","updatedMovies","filter","movie","id"],"sources":["D:/YanivArad/FullStack_Project/Client/cinema/src/rootReducer.js"],"sourcesContent":["\r\nimport axios from 'axios'\r\nconst initialValue = {\r\n  movies: [],\r\n  members: [],\r\n  subscriptions: [],\r\n  users: [],\r\n};\r\n\r\nconst storeReducer = async (state = initialValue, action) => {\r\n  switch (action.type) {\r\n    case 'LOADMOVIES':\r\n      return { ...state, movies: action.payload };\r\n     case 'DELETE_MOVIE':\r\n      const movieId = action.payload;\r\n      await axios.delete(`${'http://localhost:8000/movies'}/${movieId}`);\r\n      await axios.put(`${'http://localhost:8000/subscriptions'}/${movieId}`,movieId) \r\n      const updatedMovies = state.movies.filter(movie => movie.id !== movieId);\r\n      return { ...state, movies: updatedMovies };\r\n    case 'LOADMEMBERS':\r\n      return { ...state, members: action.payload };\r\n    case 'LOADSUBSCRIPTIONS':\r\n      return { ...state, subscriptions: action.payload };\r\n    case 'LOADUSERS':\r\n      return { ...state, users: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default storeReducer;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAG,eAAAA,CAAA,EAAwC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QAAE,GAAGL,KAAK;QAAEL,MAAM,EAAES,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAK,cAAc;MAClB,MAAMC,OAAO,GAAGH,MAAM,CAACE,OAAO;MAC9B,MAAMb,KAAK,CAACe,MAAM,CAAE,GAAE,8BAA+B,IAAGD,OAAQ,EAAC,CAAC;MAClE,MAAMd,KAAK,CAACgB,GAAG,CAAE,GAAE,qCAAsC,IAAGF,OAAQ,EAAC,EAACA,OAAO,CAAC;MAC9E,MAAMG,aAAa,GAAGV,KAAK,CAACL,MAAM,CAACgB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKN,OAAO,CAAC;MACxE,OAAO;QAAE,GAAGP,KAAK;QAAEL,MAAM,EAAEe;MAAc,CAAC;IAC5C,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGV,KAAK;QAAEJ,OAAO,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IAC9C,KAAK,mBAAmB;MACtB,OAAO;QAAE,GAAGN,KAAK;QAAEH,aAAa,EAAEO,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAK,WAAW;MACd,OAAO;QAAE,GAAGN,KAAK;QAAEF,KAAK,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC5C;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}