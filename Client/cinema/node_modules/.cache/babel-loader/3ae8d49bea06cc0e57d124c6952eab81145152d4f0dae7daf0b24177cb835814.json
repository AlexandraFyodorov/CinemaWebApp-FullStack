{"ast":null,"code":"const initialValue = {\n  movies: [],\n  members: [],\n  subscriptions: [],\n  users: []\n};\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialValue;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //MOVIES\n    case 'LOADMOVIES':\n      {\n        const movies = JSON.stringify({\n          ...state,\n          movies: action.payload\n        });\n        //sessionStorage.setItem('movies', movies);\n        return {\n          ...state,\n          movies: action.payload\n        };\n      }\n    case 'UPDATEMOVIE':\n      {\n        const updatedMovie = action.payload;\n        const updatedMovies = state.movies.map(movie => {\n          if (movie._id === updatedMovie._id) {\n            return {\n              ...movie,\n              ...updatedMovie\n            };\n          }\n          return movie;\n        });\n        return {\n          ...state,\n          movies: updatedMovies\n        };\n      }\n    case 'ADDMOVIE':\n      {\n        const newMovie = action.payload;\n        const updatedMovies = [...state.movies, newMovie];\n        return {\n          ...state,\n          movies: updatedMovies\n        };\n      }\n    case 'DELETEMOVIE':\n      {\n        const movieId = action.payload;\n        const updatedMovies = state.movies.filter(movie => movie._id !== movieId);\n        return {\n          ...state,\n          movies: updatedMovies\n        };\n      }\n    //MEMBERS\n    case 'LOADMEMBERS':\n      {\n        //sessionStorage.setItem('members', members);\n        return {\n          ...state,\n          members: action.payload\n        };\n      }\n    case 'UPDATEMEMBER':\n      {\n        const updatedMember = action.payload;\n        const updatedMembers = state.members.map(member => {\n          if (member._id === updatedMember._id) {\n            return {\n              ...member,\n              ...updatedMember\n            };\n          }\n          return member;\n        });\n        return {\n          ...state,\n          members: updatedMembers\n        };\n      }\n    case 'ADDMEMBER':\n      {\n        const newMember = action.payload;\n        const updatedMember = [...state.members, newMember];\n        return {\n          ...state,\n          members: updatedMember\n        };\n      }\n    case 'DELETEMEMBER':\n      {\n        const memberId = action.payload;\n        const updatedMembers = state.members.filter(member => member._id !== memberId);\n        return {\n          ...state,\n          members: updatedMembers\n        };\n      }\n    //Subscription\n    case 'LOADSUBSCRIPTIONS':\n      return {\n        ...state,\n        subscriptions: action.payload\n      };\n    case 'ADDSUBSCRIPTION':\n      {\n        const updatedSubscription = action.payload;\n        let updatedSubscriptions = state.subscriptions.map(sub => {\n          if (sub.memberId === updatedSubscription.memberId) {\n            return {\n              ...sub,\n              ...updatedSubscription\n            };\n          }\n        });\n        if (updatedSubscriptions.length === 0) {\n          return {\n            ...state,\n            subscriptions: updatedSubscription\n          };\n        } else {\n          return {\n            ...state,\n            subscriptions: updatedSubscriptions\n          };\n        }\n      }\n    case 'DELETESUBSCRIPTION':\n      {\n        const memberId = action.payload;\n        const updatedSubscriptions = state.subscriptions.filter(sub => sub.memberId !== memberId);\n        return {\n          ...state,\n          subscriptions: updatedSubscriptions\n        };\n      }\n\n    //USERS\n    case 'LOADUSERS':\n      {\n        return {\n          ...state,\n          users: action.payload\n        };\n      }\n    case 'UPDATEUSER':\n      {\n        const updatedUser = action.payload;\n        const updatedUsers = state.users.map(user => {\n          if (user.id === updatedUser.id) {\n            return {\n              ...user,\n              ...updatedUser\n            };\n          }\n          return user;\n        });\n        return {\n          ...state,\n          users: updatedUsers\n        };\n      }\n    case 'ADDUSER':\n      {\n        const newUser = action.payload;\n        const updatedUser = [...state.users, newUser];\n        return {\n          ...state,\n          users: updatedUser\n        };\n      }\n    case 'DELETEUSER':\n      {\n        const userId = action.payload;\n        const updatedUsers = state.users.filter(user => user.id !== userId);\n        return {\n          ...state,\n          users: updatedUsers\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default storeReducer;","map":{"version":3,"names":["initialValue","movies","members","subscriptions","users","storeReducer","state","arguments","length","undefined","action","type","JSON","stringify","payload","updatedMovie","updatedMovies","map","movie","_id","newMovie","movieId","filter","updatedMember","updatedMembers","member","newMember","memberId","updatedSubscription","updatedSubscriptions","sub","updatedUser","updatedUsers","user","id","newUser","userId"],"sources":["D:/YanivArad/FullStack_Project/Client/cinema/src/rootReducer.js"],"sourcesContent":["\r\nconst initialValue = {\r\n  movies: [],\r\n  members: [],\r\n  subscriptions: [],\r\n  users: [],\r\n};\r\n\r\nconst storeReducer = (state = initialValue, action) => {\r\n  switch (action.type) {\r\n    //MOVIES\r\n    case 'LOADMOVIES':\r\n      {\r\n        const movies = JSON.stringify({ ...state, movies: action.payload });\r\n        //sessionStorage.setItem('movies', movies);\r\n        return { ...state, movies: action.payload };\r\n      }\r\n    case 'UPDATEMOVIE': {\r\n      const updatedMovie = action.payload;\r\n      const updatedMovies = state.movies.map(movie => {\r\n        if (movie._id === updatedMovie._id) {\r\n          return { ...movie, ...updatedMovie };\r\n        }\r\n        return movie;\r\n      });\r\n      return { ...state, movies: updatedMovies };\r\n    }\r\n    case 'ADDMOVIE': {\r\n      const newMovie = action.payload;\r\n      const updatedMovies = [...state.movies, newMovie];\r\n      return { ...state, movies: updatedMovies };\r\n    }\r\n\r\n    case 'DELETEMOVIE': {\r\n      const movieId = action.payload;\r\n      const updatedMovies = state.movies.filter(movie => movie._id !== movieId);\r\n      return { ...state, movies: updatedMovies };\r\n    }\r\n    //MEMBERS\r\n    case 'LOADMEMBERS': {\r\n      //sessionStorage.setItem('members', members);\r\n      return { ...state, members: action.payload };\r\n    }\r\n    case 'UPDATEMEMBER': {\r\n      const updatedMember = action.payload;\r\n      const updatedMembers = state.members.map(member => {\r\n        if (member._id === updatedMember._id) {\r\n          return { ...member, ...updatedMember };\r\n        }\r\n        return member;\r\n      });\r\n      return { ...state, members: updatedMembers };\r\n    }\r\n    case 'ADDMEMBER': {\r\n      const newMember = action.payload;\r\n      const updatedMember = [...state.members, newMember];\r\n      return { ...state, members: updatedMember };\r\n    }\r\n\r\n    case 'DELETEMEMBER': {\r\n      const memberId = action.payload;\r\n      const updatedMembers = state.members.filter(member => member._id !== memberId);\r\n      return { ...state, members: updatedMembers };\r\n    }\r\n    //Subscription\r\n    case 'LOADSUBSCRIPTIONS':\r\n        return { ...state, subscriptions: action.payload };\r\n        \r\n    case 'ADDSUBSCRIPTION': {\r\n      const updatedSubscription = action.payload;\r\n      let updatedSubscriptions = state.subscriptions.map(sub => {\r\n        if (sub.memberId === updatedSubscription.memberId)\r\n        {\r\n          return { ...sub, ...updatedSubscription };\r\n        }\r\n      });\r\n\r\n      if(updatedSubscriptions.length===0)\r\n      {\r\n        return { ...state, subscriptions: updatedSubscription };\r\n      }\r\n      else{\r\n        return { ...state, subscriptions: updatedSubscriptions };\r\n      }\r\n      \r\n    }\r\n \r\n\r\n    case 'DELETESUBSCRIPTION': {\r\n      const memberId = action.payload;\r\n      const updatedSubscriptions = state.subscriptions.filter(sub => sub.memberId !== memberId);\r\n      return { ...state, subscriptions: updatedSubscriptions };\r\n    }\r\n\r\n\r\n\r\n    //USERS\r\n    case 'LOADUSERS': {\r\n      return { ...state, users: action.payload };\r\n    }\r\n    case 'UPDATEUSER': {\r\n      const updatedUser = action.payload;\r\n      const updatedUsers = state.users.map(user => {\r\n        if (user.id === updatedUser.id) {\r\n          return { ...user, ...updatedUser };\r\n        }\r\n        return user;\r\n      });\r\n      return { ...state, users: updatedUsers };\r\n    }\r\n    case 'ADDUSER': {\r\n      const newUser = action.payload;\r\n      const updatedUser = [...state.users, newUser];\r\n      return { ...state, users: updatedUser };\r\n    }\r\n\r\n    case 'DELETEUSER': {\r\n      const userId = action.payload;\r\n      const updatedUsers = state.users.filter(user => user.id !== userId);\r\n      return { ...state, users: updatedUsers };\r\n    }\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n};\r\n\r\nexport default storeReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}